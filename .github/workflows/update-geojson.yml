name: Update GeoJSON and Deploy

on:
  push:
    paths:
      - 'data/properties.geojson'
      - 'map.html'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate GeoJSON
      run: |
        echo "Validating GeoJSON file..."
        node -e "
          const fs = require('fs');
          const data = JSON.parse(fs.readFileSync('data/properties.geojson', 'utf8'));
          if (data.type !== 'FeatureCollection') {
            console.error('‚ùå Invalid GeoJSON: Must be FeatureCollection');
            process.exit(1);
          }
          if (!Array.isArray(data.features)) {
            console.error('‚ùå Invalid GeoJSON: Must have features array');
            process.exit(1);
          }
          console.log('‚úÖ GeoJSON validation passed:', data.features.length, 'features');
        "
        
    - name: Update embedded data in HTML
      run: |
        echo "Updating embedded GeoJSON data in map.html..."
        node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Read GeoJSON data
          const geoJsonData = JSON.parse(fs.readFileSync('data/properties.geojson', 'utf8'));
          
          // Read HTML file
          let htmlContent = fs.readFileSync('map.html', 'utf8');
          
          // Generate new version number
          const timestamp = new Date();
          const version = \`20241219_\${timestamp.getHours()}\${timestamp.getMinutes()}\${timestamp.getSeconds()}\`;
          
          // Update embedded script
          const scriptStart = htmlContent.indexOf('<script id=\"properties-embedded\" type=\"application/json\">');
          const scriptEnd = htmlContent.indexOf('</script>', scriptStart);
          
          if (scriptStart === -1 || scriptEnd === -1) {
            console.error('‚ùå Could not find embedded GeoJSON script');
            process.exit(1);
          }
          
          const newScript = \`<script id=\"properties-embedded\" type=\"application/json\">\n\${JSON.stringify(geoJsonData, null, 4)}\n  </script>\`;
          htmlContent = htmlContent.substring(0, scriptStart) + newScript + htmlContent.substring(scriptEnd + 9);
          
          // Update version number
          const versionRegex = /const GEOJSON_VERSION = '[^']*';/;
          const newVersionLine = \`const GEOJSON_VERSION = '\${version}';\`;
          
          if (versionRegex.test(htmlContent)) {
            htmlContent = htmlContent.replace(versionRegex, newVersionLine);
            console.log('‚úÖ Updated version number to:', version);
          } else {
            console.log('‚ö†Ô∏è  Could not find GEOJSON_VERSION');
          }
          
          // Write updated HTML
          fs.writeFileSync('map.html', htmlContent);
          console.log('‚úÖ Updated map.html with new GeoJSON data');
        "
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        keep_files: true
        
    - name: Create deployment summary
      run: |
        echo "## üéâ GeoJSON Update Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### What was updated:" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ GeoJSON data validated" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Embedded data updated in map.html" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Version number updated for cache busting" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Changes deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Visit your GitHub Pages site" >> $GITHUB_STEP_SUMMARY
        echo "2. Press Ctrl+Shift+R to refresh and see changes" >> $GITHUB_STEP_SUMMARY
        echo "3. Verify all properties are displaying correctly" >> $GITHUB_STEP_SUMMARY
